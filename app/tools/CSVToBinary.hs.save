import Data.Semigroup ((<>))
import Options.Applicative

data Conversion = Conversion { inFile :: String
                             , outFile :: String }

conversion :: Parser Conversion
conversion = Conversion
  <$> strOption (long "inFile"
              <> short 'i'
              <> metavar "INPUT"
              <> help "Input file (csv)")
  <*> strOption (long "outFile"
              <> short 'o'
              <> metavar "OUTPUT"
              <> help "Output file (binary)")

description :: String
description = "Converts csv file with numbers "
            =

title :: String
title = "CSVToBinary"

convert :: Conversion -> IO ()
convert args = putStrLn "bb"

main :: IO ()
main = convert =<< execParser opts
  where opts = info (conversion <**> helper)
                    (fullDesc
                  <> progDesc description
                  <> header title)
