module HML.Types.DataSize
( DataSize(..) ) where

import Data.Attoparsec.ByteString (Parser, take)
import Data.ByteString.Conversion (FromByteString(..))
import Data.Serialize.Get (getInt64be, runGet)
import Prelude hiding (take)

newtype DataSize = DataSize { getDataSize :: Int }

parseDataSize :: Parser DataSize
parseDataSize = do
  bytes <- take 8
  let dSize = runGet getInt64be bytes
  either (
  return $ _ dSize

instance FromByteString DataSize where
  parser = parseDataSize
