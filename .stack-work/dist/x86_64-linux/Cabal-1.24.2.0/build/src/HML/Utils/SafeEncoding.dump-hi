
==================== FINAL INTERFACE ====================
2017-11-20 04:54:01.002857 UTC

interface haslearned-0.1.0.0-1MYfuCwSlxlBXzMx3VqeuN:HML.Utils.SafeEncoding 8002
  interface hash: c744c249b31172545b8a3522c3fbb8c9
  ABI hash: 1fe17e2a4489569b3410ddcf32621962
  export-list hash: 59f665d7bccd9a7c7beb0832a6d9c753
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: acf9134d443fbdec1f05c464899ac57b
  sig of: Nothing
  used TH splices: False
  where
exports:
  HML.Utils.SafeEncoding.safeStdEncodings
module dependencies:
package dependencies: base-4.9.1.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Monoid base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:GHC.Generics base-4.9.1.0:GHC.IO.Exception
                         base-4.9.1.0:GHC.TypeLits
import  -/  base-4.9.1.0:Data.Foldable 3e0b6967a1da89945d0e2d47266337a2
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.IO.Encoding 769a34cfd2ddd67e5ee95d457338990e
import  -/  base-4.9.1.0:GHC.IO.Handle ba98a5b34d78cbf48b41fe58a3735c69
import  -/  base-4.9.1.0:GHC.IO.Handle.FD dbf0d0d4f42ab1465129a88ccf7880ff
import  -/  base-4.9.1.0:GHC.IO.Handle.Types 17aa0e2ab137800e3a31992d780c071f
import  -/  base-4.9.1.0:GHC.List ab8c4e523e6c479c549d3bcd5fc4a439
import  -/  base-4.9.1.0:GHC.Show a027f5ac24879eaba752f44aa90fe511
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  base-4.9.1.0:System.IO e4a64a8e3dce8616da54f0ee7104f7db
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
3d91dd7e72d9d6782c674f7651d76a1a
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   HML.Utils.SafeEncoding.$trModule2
                   HML.Utils.SafeEncoding.$trModule1) -}
253d9399fef917500ad6ca683be8b483
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "HML.Utils.SafeEncoding"#) -}
d3a610c58ab2fd367f7cedc453520481
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "haslearned-0.1.0.0-1MYfuCwSlxlBXzMx3VqeuN"#) -}
67bf661a9e4ccd659bae37f7e9349db7
  safeStdEncodings :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                HML.Utils.SafeEncoding.safeStdEncodings1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <()>_R)) -}
b4f74d1663d584159259e0244edf076b
  safeStdEncodings1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 case HML.Utils.SafeEncoding.safeStdEncodings2
                        GHC.IO.Handle.FD.stdout
                        eta of ds1 { (#,#) ipv ipv1 ->
                 case HML.Utils.SafeEncoding.safeStdEncodings2
                        GHC.IO.Handle.FD.stdin
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case HML.Utils.SafeEncoding.safeStdEncodings2
                        GHC.IO.Handle.FD.stderr
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 (# ipv4, GHC.Tuple.() #) } } }) -}
45d157e0871721cf237435c4f1c1e02e
  safeStdEncodings2 ::
    GHC.IO.Handle.Types.Handle
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <S,U><S,U>,
     Unfolding: (\ (h :: GHC.IO.Handle.Types.Handle)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.IO.Handle.hGetEncoding1 h eta of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   GHC.Base.Nothing -> (# ipv, GHC.Tuple.() #)
                   GHC.Base.Just enc
                   -> case enc of wild1 { GHC.IO.Encoding.Types.TextEncoding dstate0 estate0 ds2 ds3 ds4 ->
                      case GHC.IO.Encoding.mkTextEncoding1
                             (HML.Utils.SafeEncoding.safeStdEncodings_go ds2)
                             ipv of ds5 { (#,#) ipv2 ipv3 ->
                      GHC.IO.Handle.hSetEncoding1 h ipv3 ipv2 } } } }) -}
723a16390fc26ed4e18687e421dbb19e
  safeStdEncodings_go :: [GHC.Types.Char] -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <S,1*U> -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

